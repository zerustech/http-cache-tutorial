#!/bin/bash

# This file is part of the ZerusTech HTTP Cache Tutorial package.
#
# (c) Michael Lee <michael.lee@zerustech.com>
#
# For the full copyright and license information, please view the LICENSE file 
# that was distributed with this source code.

base=`cd $(dirname $BASH_SOURCE) && pwd` && source $base/../../bootstrap.sh

# This script is a command line wrapper of zerustech/cli/bin/task/task.all.run
# 
# @author Michael Lee <michael.lee@zerustech.com>

# The command line usage of this script.
# 
# Usage: usage
function usage()
{
    printf "task.all.run: usage: task.all.run [-av] [-l log_file] [-e task_exec] [-p path_pattern] [-n name_pattern] [-d depth|min+|min-max] path [task_arguments ...]\n"
    printf "The options are as follows:\n"
    printf "\t-a Run all tasks automatically.\n"
    printf "\t-v Run all tasks in verbose mode: display output from tasks to stdout.\n"

    exit 1
}

task_exec=""
log_file="$base/../../var/task.all.run.log"
path_pattern=""
name_pattern="test.sh"
depth=""
min_depth=""
max_depth=""
path="$app_base/test-cases"
verbose=1
interactive=1
tty=`tty`

while getopts "avl:e:p:n:d:" opt; do

    case $opt in

        a) interactive=0;;

        v) verbose=1;;

        l) log_file="$OPTARG";;

        e) task_exec="$OPTARG";;

        p) path_pattern="$OPTARG";;

        n) name_pattern="$OPTARG";;

        d) depth="$OPTARG";;

        *) usage;;

    esac

done

shift $((OPTIND -1))

if [ "$1" != "" ]; then

   path=$1 && shift

fi

options=""

if [ "$verbose" == "1" ]; then

   options="${options}v";

fi

if [ "$interactive" != "1" ]; then

   options="${options}a"

fi

if [ "$options" != "" ]; then

   options="-${options}"
  
fi

if [ "$options" != "" ]; then

    $app_vendor_zerustech_cli_bin/task/task.all.run "$options" -l "$log_file" -e "$task_exec" -p "$path_pattern" -n "$name_pattern" -d "$depth" "$path" "$@"

else 

    $app_vendor_zerustech_cli_bin/task/task.all.run -l "$log_file" -e "$task_exec" -p "$path_pattern" -n "$name_pattern" -d "$depth" "$path" "$@"

fi


